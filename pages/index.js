import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React, {useEffect, useState }from 'react'
import Card from '../components/Card'

export default function Home() {
  const [count, setCount] = useState(0)
  const [todolist, settodoList] = useState([])
  const [todoAdd, setTodoAdd] = useState("")
  const [editableTodo, setEditableTodo] = useState("");
  const [color, setColor] = useState("blue");


 const handlePush = event  =>{
settodoList(prevArray => [...todolist, todoAdd]);
 }

 const handleChange = event  =>{
   setTodoAdd(event.target.value);
  }

  const handleDelete = event  =>{
    settodoList(todolist.filter((_, i) => event !== i))
  }
    const editTask = (_, event) =>{
      setEditableTodo(event)
    }
    const handleEdit = event =>  {
      let newTodoList = [...todolist]
      newTodoList[editableTodo] = event.target.value
      settodoList(newTodoList)
    }


    useEffect(()=> {
      console.log("modification")
    }, [todolist]);

    useEffect(()=> {
      count>0 && setColor('red')
    }, [count]);

    useEffect(()=> {
      localStorage.setItem("todos", todolist)
      return () =>{
        localStorage.clear()
      }
    }, [todolist]);


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1> Test </h1>
        <h3>Count : {count}</h3>
        <button onClick={()=> setCount(prev => prev + 1)}>click</button>

       {/* input */}
       <input type="text" onChange={handleChange}/>
       {/* button */}
       <button onClick={() => handlePush()}>Submit</button>
        {todolist.length > 0 && (
          todolist.map((todo, i )=> {
            return(

              <div key={i}>
                <input key={i} value={todo} onChange={(event) =>handleEdit(event)} type="text" defaultValue ={todo} disabled={editableTodo === i ? false : true}/>
                <button key={i} onClick={()=> handleDelete(i)}>delete</button>
                <button key={i} onClick={()=> editTask(todo, i)}>edit</button>
            </div>
            )
          })
        )}
        <Card title="okokok" desc="description" image="https://images.unsplash.com/photo-1639108436992-11cc4850c965?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1742&q=80" price="30"/>
      </main>
    </div>
  )
}
